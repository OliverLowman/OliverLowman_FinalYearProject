<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GJPj33//Dyucp3pv0ft1AAAAAElFTkSuQmCC
</value>
  </data>
</root>